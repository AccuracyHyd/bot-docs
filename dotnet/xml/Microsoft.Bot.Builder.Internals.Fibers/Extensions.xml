<Type Name="Extensions" FullName="Microsoft.Bot.Builder.Internals.Fibers.Extensions">
  <TypeSignature Language="C#" Value="public static class Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Internals.Fibers.Extensions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.11.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Call&lt;C,T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt; Call&lt;C,T&gt; (this Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt; fiber, Microsoft.Bot.Builder.Internals.Fibers.Rest&lt;C,T&gt; invokeHandler, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Builder.Internals.Fibers.IWait`1&lt;!!C&gt; Call&lt;C, T&gt;(class Microsoft.Bot.Builder.Internals.Fibers.IFiber`1&lt;!!C&gt; fiber, class Microsoft.Bot.Builder.Internals.Fibers.Rest`2&lt;!!C, !!T&gt; invokeHandler, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.Call``2(Microsoft.Bot.Builder.Internals.Fibers.IFiber{``0},Microsoft.Bot.Builder.Internals.Fibers.Rest{``0,``1},``1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="C" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fiber" Type="Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;" RefType="this" />
        <Parameter Name="invokeHandler" Type="Microsoft.Bot.Builder.Internals.Fibers.Rest&lt;C,T&gt;" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="C">To be added.</typeparam>
        <typeparam name="T">To be added.</typeparam>
        <param name="fiber">To be added.</param>
        <param name="invokeHandler">To be added.</param>
        <param name="item">To be added.</param>
        <summary>
            Push a frame on the stack, schedule a wait, and immediately satisfy that wait.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This overload is used to allow a child to later call <see cref="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.Done``2(Microsoft.Bot.Builder.Internals.Fibers.IFiber{``0},``1)" />
            to satisfy an existing wait without scheduling a new wait for the child's return value.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Call&lt;C,T,R&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt; Call&lt;C,T,R&gt; (this Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt; fiber, Microsoft.Bot.Builder.Internals.Fibers.Rest&lt;C,T&gt; invokeHandler, T item, Microsoft.Bot.Builder.Internals.Fibers.Rest&lt;C,R&gt; returnHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Builder.Internals.Fibers.IWait`1&lt;!!C&gt; Call&lt;C, T, R&gt;(class Microsoft.Bot.Builder.Internals.Fibers.IFiber`1&lt;!!C&gt; fiber, class Microsoft.Bot.Builder.Internals.Fibers.Rest`2&lt;!!C, !!T&gt; invokeHandler, !!T item, class Microsoft.Bot.Builder.Internals.Fibers.Rest`2&lt;!!C, !!R&gt; returnHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.Call``3(Microsoft.Bot.Builder.Internals.Fibers.IFiber{``0},Microsoft.Bot.Builder.Internals.Fibers.Rest{``0,``1},``1,Microsoft.Bot.Builder.Internals.Fibers.Rest{``0,``2})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="C" />
        <TypeParameter Name="T" />
        <TypeParameter Name="R" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fiber" Type="Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;" RefType="this" />
        <Parameter Name="invokeHandler" Type="Microsoft.Bot.Builder.Internals.Fibers.Rest&lt;C,T&gt;" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="returnHandler" Type="Microsoft.Bot.Builder.Internals.Fibers.Rest&lt;C,R&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="C">To be added.</typeparam>
        <typeparam name="T">To be added.</typeparam>
        <typeparam name="R">To be added.</typeparam>
        <param name="fiber">To be added.</param>
        <param name="invokeHandler">To be added.</param>
        <param name="item">To be added.</param>
        <param name="returnHandler">To be added.</param>
        <summary>
            Scheduled a wait for the return value, then invoke the <see cref="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.Call``2(Microsoft.Bot.Builder.Internals.Fibers.IFiber{``0},Microsoft.Bot.Builder.Internals.Fibers.Rest{``0,``1},``1)" /> method.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneTyped&lt;C&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt; CloneTyped&lt;C&gt; (this Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt; wait);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Builder.Internals.Fibers.IWait`1&lt;!!C&gt; CloneTyped&lt;C&gt;(class Microsoft.Bot.Builder.Internals.Fibers.IWait`1&lt;!!C&gt; wait) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.CloneTyped``1(Microsoft.Bot.Builder.Internals.Fibers.IWait{``0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="C" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="wait" Type="Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="C">To be added.</typeparam>
        <param name="wait">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Done&lt;C,T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt; Done&lt;C,T&gt; (this Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt; fiber, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Builder.Internals.Fibers.IWait`1&lt;!!C&gt; Done&lt;C, T&gt;(class Microsoft.Bot.Builder.Internals.Fibers.IFiber`1&lt;!!C&gt; fiber, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.Done``2(Microsoft.Bot.Builder.Internals.Fibers.IFiber{``0},``1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="C" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fiber" Type="Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="C">To be added.</typeparam>
        <typeparam name="T">To be added.</typeparam>
        <param name="fiber">To be added.</param>
        <param name="item">To be added.</param>
        <summary>
            Remove the frame from the stack, and satisfy the existing wait with the return value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;int&gt; Enumerate (this Microsoft.Bot.Builder.Internals.Fibers.Range&lt;int&gt; range);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;int32&gt; Enumerate(valuetype Microsoft.Bot.Builder.Internals.Fibers.Range`1&lt;int32&gt; range) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.Enumerate(Microsoft.Bot.Builder.Internals.Fibers.Range{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Bot.Builder.Internals.Fibers.Extensions/&lt;Enumerate&gt;d__7))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Microsoft.Bot.Builder.Internals.Fibers.Range&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Equals&lt;T&gt; (this System.Collections.Generic.IReadOnlyList&lt;T&gt; one, System.Collections.Generic.IReadOnlyList&lt;T&gt; two, System.Collections.Generic.IEqualityComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals&lt;T&gt;(class System.Collections.Generic.IReadOnlyList`1&lt;!!T&gt; one, class System.Collections.Generic.IReadOnlyList`1&lt;!!T&gt; two, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.Equals``1(System.Collections.Generic.IReadOnlyList{``0},System.Collections.Generic.IReadOnlyList{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="one" Type="System.Collections.Generic.IReadOnlyList&lt;T&gt;" RefType="this" />
        <Parameter Name="two" Type="System.Collections.Generic.IReadOnlyList&lt;T&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="one">To be added.</param>
        <param name="two">To be added.</param>
        <param name="comparer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail&lt;C&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt; Fail&lt;C&gt; (this Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt; fiber, Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Builder.Internals.Fibers.IWait`1&lt;!!C&gt; Fail&lt;C&gt;(class Microsoft.Bot.Builder.Internals.Fibers.IFiber`1&lt;!!C&gt; fiber, class System.Exception error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.Fail``1(Microsoft.Bot.Builder.Internals.Fibers.IFiber{``0},System.Exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="C" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fiber" Type="Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;" RefType="this" />
        <Parameter Name="error" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="C">To be added.</typeparam>
        <param name="fiber">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAdd&lt;K,V&gt;">
      <MemberSignature Language="C#" Value="public static V GetOrAdd&lt;K,V&gt; (this System.Collections.Generic.IDictionary&lt;K,V&gt; valueByKey, K key, Func&lt;K,V&gt; make);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!V GetOrAdd&lt;K, V&gt;(class System.Collections.Generic.IDictionary`2&lt;!!K, !!V&gt; valueByKey, !!K key, class System.Func`2&lt;!!K, !!V&gt; make) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.GetOrAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``0,``1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>V</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="K" />
        <TypeParameter Name="V" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="valueByKey" Type="System.Collections.Generic.IDictionary&lt;K,V&gt;" RefType="this" />
        <Parameter Name="key" Type="K" />
        <Parameter Name="make" Type="System.Func&lt;K,V&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="K">To be added.</typeparam>
        <typeparam name="V">To be added.</typeparam>
        <param name="valueByKey">To be added.</param>
        <param name="key">To be added.</param>
        <param name="make">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetValue&lt;T&gt; (this System.Runtime.Serialization.SerializationInfo info, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetValue&lt;T&gt;(class System.Runtime.Serialization.SerializationInfo info, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.GetValue``1(System.Runtime.Serialization.SerializationInfo,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="info">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Min&lt;T&gt; (T one, T two) where T : IComparable&lt;T&gt;;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Min&lt;(class System.IComparable`1&lt;!!T&gt;) T&gt;(!!T one, !!T two) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.Min``1(``0,``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>System.IComparable&lt;T&gt;</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="one" Type="T" />
        <Parameter Name="two" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="one">To be added.</param>
        <param name="two">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Peek&lt;T&gt; (this System.Collections.Generic.IReadOnlyList&lt;T&gt; stack);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Peek&lt;T&gt;(class System.Collections.Generic.IReadOnlyList`1&lt;!!T&gt; stack) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.Peek``1(System.Collections.Generic.IReadOnlyList{``0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="stack" Type="System.Collections.Generic.IReadOnlyList&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="stack">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pop&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Pop&lt;T&gt; (this System.Collections.Generic.List&lt;T&gt; stack);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Pop&lt;T&gt;(class System.Collections.Generic.List`1&lt;!!T&gt; stack) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.Pop``1(System.Collections.Generic.List{``0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="stack" Type="System.Collections.Generic.List&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="stack">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Post&lt;C,T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt; Post&lt;C,T&gt; (this Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt; fiber, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Builder.Internals.Fibers.IWait`1&lt;!!C&gt; Post&lt;C, T&gt;(class Microsoft.Bot.Builder.Internals.Fibers.IFiber`1&lt;!!C&gt; fiber, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.Post``2(Microsoft.Bot.Builder.Internals.Fibers.IFiber{``0},``1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="C" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fiber" Type="Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="C">To be added.</typeparam>
        <typeparam name="T">To be added.</typeparam>
        <param name="fiber">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Push&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Push&lt;T&gt; (this System.Collections.Generic.IList&lt;T&gt; stack, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Push&lt;T&gt;(class System.Collections.Generic.IList`1&lt;!!T&gt; stack, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.Push``1(System.Collections.Generic.IList{``0},``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="stack" Type="System.Collections.Generic.IList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="stack">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset&lt;C&gt;">
      <MemberSignature Language="C#" Value="public static void Reset&lt;C&gt; (this Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt; fiber);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reset&lt;C&gt;(class Microsoft.Bot.Builder.Internals.Fibers.IFiber`1&lt;!!C&gt; fiber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.Reset``1(Microsoft.Bot.Builder.Internals.Fibers.IFiber{``0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="C" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fiber" Type="Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="C">To be added.</typeparam>
        <param name="fiber">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortedMerge&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Internals.Fibers.Range&lt;T&gt;&gt; SortedMerge&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Internals.Fibers.Range&lt;T&gt;&gt; oneItems, System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Internals.Fibers.Range&lt;T&gt;&gt; twoItems) where T : IEquatable&lt;T&gt;, IComparable&lt;T&gt;;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Bot.Builder.Internals.Fibers.Range`1&lt;!!T&gt;&gt; SortedMerge&lt;(class System.IEquatable`1&lt;!!T&gt;, class System.IComparable`1&lt;!!T&gt;) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Bot.Builder.Internals.Fibers.Range`1&lt;!!T&gt;&gt; oneItems, class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Bot.Builder.Internals.Fibers.Range`1&lt;!!T&gt;&gt; twoItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.SortedMerge``1(System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Internals.Fibers.Range{``0}},System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Internals.Fibers.Range{``0}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Bot.Builder.Internals.Fibers.Extensions/&lt;SortedMerge&gt;d__10`1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Internals.Fibers.Range&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>System.IEquatable&lt;T&gt;</InterfaceName>
            <InterfaceName>System.IComparable&lt;T&gt;</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="oneItems" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Internals.Fibers.Range&lt;T&gt;&gt;" RefType="this" />
        <Parameter Name="twoItems" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Internals.Fibers.Range&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="oneItems">To be added.</param>
        <param name="twoItems">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToList&lt;T,R&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;R&gt; ToList&lt;T,R&gt; (this System.Collections.Generic.IReadOnlyList&lt;T&gt; source, Func&lt;T,R&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;!!R&gt; ToList&lt;T, R&gt;(class System.Collections.Generic.IReadOnlyList`1&lt;!!T&gt; source, class System.Func`2&lt;!!T, !!R&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.ToList``2(System.Collections.Generic.IReadOnlyList{``0},System.Func{``0,``1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;R&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="R" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IReadOnlyList&lt;T&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;T,R&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <typeparam name="R">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="selector">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTask&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; ToTask&lt;T&gt; (this Microsoft.Bot.Builder.Dialogs.IAwaitable&lt;T&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; ToTask&lt;T&gt;(class Microsoft.Bot.Builder.Dialogs.IAwaitable`1&lt;!!T&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.ToTask``1(Microsoft.Bot.Builder.Dialogs.IAwaitable{``0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Bot.Builder.Dialogs.IAwaitable&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateNeed">
      <MemberSignature Language="C#" Value="public static void ValidateNeed (this Microsoft.Bot.Builder.Internals.Fibers.IWait wait, Microsoft.Bot.Builder.Internals.Fibers.Need need);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateNeed(class Microsoft.Bot.Builder.Internals.Fibers.IWait wait, valuetype Microsoft.Bot.Builder.Internals.Fibers.Need need) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.ValidateNeed(Microsoft.Bot.Builder.Internals.Fibers.IWait,Microsoft.Bot.Builder.Internals.Fibers.Need)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wait" Type="Microsoft.Bot.Builder.Internals.Fibers.IWait" RefType="this" />
        <Parameter Name="need" Type="Microsoft.Bot.Builder.Internals.Fibers.Need" />
      </Parameters>
      <Docs>
        <param name="wait">To be added.</param>
        <param name="need">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait&lt;C,T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt; Wait&lt;C,T&gt; (this Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt; fiber, Microsoft.Bot.Builder.Internals.Fibers.Rest&lt;C,T&gt; resumeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Builder.Internals.Fibers.IWait`1&lt;!!C&gt; Wait&lt;C, T&gt;(class Microsoft.Bot.Builder.Internals.Fibers.IFiber`1&lt;!!C&gt; fiber, class Microsoft.Bot.Builder.Internals.Fibers.Rest`2&lt;!!C, !!T&gt; resumeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Internals.Fibers.Extensions.Wait``2(Microsoft.Bot.Builder.Internals.Fibers.IFiber{``0},Microsoft.Bot.Builder.Internals.Fibers.Rest{``0,``1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Internals.Fibers.IWait&lt;C&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="C" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fiber" Type="Microsoft.Bot.Builder.Internals.Fibers.IFiber&lt;C&gt;" RefType="this" />
        <Parameter Name="resumeHandler" Type="Microsoft.Bot.Builder.Internals.Fibers.Rest&lt;C,T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="C">To be added.</typeparam>
        <typeparam name="T">To be added.</typeparam>
        <param name="fiber">To be added.</param>
        <param name="resumeHandler">To be added.</param>
        <summary>
            Without pushing or popping the stack, schedule a wait to be satisfied later.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>